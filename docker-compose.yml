version: '3'

services:
  airflow:
    build:
      context: ./airflow
    container_name: airflow
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./path/to/spark_job.py:/opt/airflow/spark_job.py 
      - ./path/to/spark_multi_operation.py:/opt/airflow/spark_multi_operation.py
    depends_on:
      - jaeger
      - spark  # Ensure that Airflow starts after Spark
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      # - OTEL_EXPORTER_JAEGER_AGENT_HOST=jaeger  # Export traces to Jaeger
      # - OTEL_EXPORTER_JAEGER_AGENT_PORT=5775
      # - OTEL_EXPORTER_OTLP_ENDPOINT=grpc://jaeger:14250  # OTLP endpoint for Jaeger
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317  # OTLP endpoint for Jaeger
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc  
    networks:
      - tracing-network
    command: bash -c "airflow db init && airflow users create --username airflow --firstname Admin --lastname User --email admin@example.com --role Admin --password airflow  && airflow webserver & sleep 20 && airflow scheduler"

  spark:
    build:
      context: ./spark
    container_name: spark
    volumes:
      - ./spark/spark_job.py:/opt/airflow/spark_job.py
      - ./spark/spark_multi_operation.py:/opt/airflow/spark_multi_operation.py

    depends_on:
      - jaeger
    environment:
      # - OTEL_EXPORTER_JAEGER_AGENT_HOST=jaeger  # Set Jaeger agent for Spark
      # - OTEL_EXPORTER_JAEGER_AGENT_PORT=5775
      # - OTEL_EXPORTER_OTLP_ENDPOINT=grpc://jaeger:14250  # OTLP endpoint for Jaeger
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317  # OTLP endpoint for Jaeger

      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc                 # Set OTLP protocol
    networks:
      - tracing-network
    # command: bash -c "while true; do sleep 30; done"  # Keeps Spark container running indefinitely
    command: bash -c "spark-submit /opt/airflow/spark_job.py && spark-submit /opt/airflow/spark_multi_operation.py && tail -f /dev/null"
 

  jaeger:
    image: jaegertracing/all-in-one:1.38
    #build:
     # context: ./jaeger
    container_name: jaeger
    ports:
      - "5775:5775/udp"  # Thrift compact UDP
      - "6831:6831/udp"  # Thrift binary UDP
      - "6832:6832/udp"  # Thrift compact UDP
      - "5778:5778"      # Config REST API
      - "16686:16686"    # Jaeger UI
      - "14268:14268"
      - "14250:14250"    # OTLP gRPC
      - "9411:9411"      # Zipkin HTTP
    environment:
      - COLLECTOR_ZIPKIN_HTTP_HTTP_PORT=9411 
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_OTLP_GRPC_ENABLED=true
      - COLLECTOR_HTTP_PORT=14268
      - COLLECTOR_GRPC_PORT=14250
    networks:
      - tracing-network

networks:
  tracing-network:
    # driver: bridge
    external: true

